#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("@aws-cdk/core");
const vpc_stack_1 = require("../lib/vpc-stack");
const rds_stack_1 = require("../lib/rds-stack");
const pipeline_stack_1 = require("../lib/pipeline-stack");
const storage_stack_1 = require("../lib/storage-stack");
const laravel_stack_1 = require("../lib/laravel-stack");
const iam_common_stack_1 = require("../lib/iam-common-stack");
const app = new cdk.App();
const vpcStack = new vpc_stack_1.VpcStack(app, 'VPC');
const rdsStack = new rds_stack_1.RDSStack(app, 'Database', {
    vpc: vpcStack.vpc,
});
const iamCommonStack = new iam_common_stack_1.IamCommonStack(app, 'IamCommon', {
    vpc: vpcStack.vpc,
});
const storageStack = new storage_stack_1.StorageStack(app, 'Storage2', {
    vpc: vpcStack.vpc,
    efsAccessSecurityGroup: iamCommonStack.efsAccessSecurityGroup,
    OAI: iamCommonStack.OAI
});
const laravelStack = new laravel_stack_1.LaravelStack(app, 'Laravel', {
    vpc: vpcStack.vpc,
    efs: storageStack.EFSInstance,
    s3: storageStack.S3Bucket,
    oai: storageStack.OAI,
    databaseAccessSecurityGroup: rdsStack.databaseAccessSecurityGroup,
    efsAccessSecurityGroup: storageStack.efsAccessSecurityGroup,
    rdsEndpoint: rdsStack.mySQLRDSInstance.dbInstanceEndpointAddress,
    rdsDb: rdsStack.database,
    rdsPort: rdsStack.mySQLRDSInstance.dbInstanceEndpointPort,
    rdsCredentials: rdsStack.credentials
});
new pipeline_stack_1.PipelineStack(app, 'Pipeline2', {
    s3: storageStack.S3Bucket,
    vpc: vpcStack.vpc,
    efs: storageStack.EFSInstance,
    cloudfront: laravelStack.cloudfront,
    databaseAccessSecurityGroup: rdsStack.databaseAccessSecurityGroup,
    efsAccessSecurityGroup: storageStack.efsAccessSecurityGroup,
    egressSecurityGroup: vpcStack.egressSecurityGroup,
    laravelArn: laravelStack.formatArn({
        service: 'cloudformation',
        resource: 'stack',
    }),
    rdsArn: rdsStack.mySQLRDSInstance.instanceArn,
    rdsEndpoint: rdsStack.mySQLRDSInstance.dbInstanceEndpointAddress,
    // rdsDbUser: rdsStack.username,
    // rdsDbPassword: rdsStack.secret,
    rdsSecret: rdsStack.secret,
    rdsDb: rdsStack.database,
    rdsPort: rdsStack.mySQLRDSInstance.dbInstanceEndpointPort,
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrX2xhcmF2ZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjZGtfbGFyYXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx1Q0FBcUM7QUFDckMscUNBQXFDO0FBRXJDLGdEQUE0QztBQUM1QyxnREFBNEM7QUFFNUMsMERBQXNEO0FBQ3RELHdEQUFvRDtBQUNwRCx3REFBb0Q7QUFFcEQsOERBQXlEO0FBRXpELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLE1BQU0sUUFBUSxHQUFHLElBQUksb0JBQVEsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDMUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxvQkFBUSxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUU7SUFDM0MsR0FBRyxFQUFFLFFBQVEsQ0FBQyxHQUFHO0NBQ3BCLENBQUMsQ0FBQztBQUNILE1BQU0sY0FBYyxHQUFHLElBQUksaUNBQWMsQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFO0lBQ3hELEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRztDQUNwQixDQUFDLENBQUE7QUFDRixNQUFNLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRTtJQUNuRCxHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUc7SUFDakIsc0JBQXNCLEVBQUUsY0FBYyxDQUFDLHNCQUFzQjtJQUM3RCxHQUFHLEVBQUUsY0FBYyxDQUFDLEdBQUc7Q0FDMUIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxZQUFZLEdBQUcsSUFBSSw0QkFBWSxDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUU7SUFDbEQsR0FBRyxFQUFFLFFBQVEsQ0FBQyxHQUFHO0lBQ2pCLEdBQUcsRUFBRSxZQUFZLENBQUMsV0FBVztJQUM3QixFQUFFLEVBQUUsWUFBWSxDQUFDLFFBQVE7SUFDekIsR0FBRyxFQUFFLFlBQVksQ0FBQyxHQUFHO0lBQ3JCLDJCQUEyQixFQUFFLFFBQVEsQ0FBQywyQkFBMkI7SUFDakUsc0JBQXNCLEVBQUUsWUFBWSxDQUFDLHNCQUFzQjtJQUMzRCxXQUFXLEVBQUUsUUFBUSxDQUFDLGdCQUFnQixDQUFDLHlCQUF5QjtJQUNoRSxLQUFLLEVBQUUsUUFBUSxDQUFDLFFBQVE7SUFDeEIsT0FBTyxFQUFFLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxzQkFBc0I7SUFDekQsY0FBYyxFQUFFLFFBQVEsQ0FBQyxXQUFXO0NBQ3ZDLENBQUMsQ0FBQztBQUVILElBQUksOEJBQWEsQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFO0lBQ2hDLEVBQUUsRUFBRSxZQUFZLENBQUMsUUFBUTtJQUN6QixHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUc7SUFDakIsR0FBRyxFQUFFLFlBQVksQ0FBQyxXQUFXO0lBQzdCLFVBQVUsRUFBRSxZQUFZLENBQUMsVUFBVTtJQUNuQywyQkFBMkIsRUFBRSxRQUFRLENBQUMsMkJBQTJCO0lBQ2pFLHNCQUFzQixFQUFFLFlBQVksQ0FBQyxzQkFBc0I7SUFDM0QsbUJBQW1CLEVBQUUsUUFBUSxDQUFDLG1CQUFtQjtJQUNqRCxVQUFVLEVBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUMvQixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLFFBQVEsRUFBRSxPQUFPO0tBQ3BCLENBQUM7SUFDRixNQUFNLEVBQUUsUUFBUSxDQUFDLGdCQUFnQixDQUFDLFdBQVc7SUFDN0MsV0FBVyxFQUFFLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyx5QkFBeUI7SUFDaEUsZ0NBQWdDO0lBQ2hDLGtDQUFrQztJQUNsQyxTQUFTLEVBQUUsUUFBUSxDQUFDLE1BQU07SUFDMUIsS0FBSyxFQUFFLFFBQVEsQ0FBQyxRQUFRO0lBQ3hCLE9BQU8sRUFBRSxRQUFRLENBQUMsZ0JBQWdCLENBQUMsc0JBQXNCO0NBRTVELENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCAnc291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCAqIGFzIHJkcyBmcm9tIFwiQGF3cy1jZGsvYXdzLXJkc1wiXG5pbXBvcnQgeyBWcGNTdGFjayB9IGZyb20gJy4uL2xpYi92cGMtc3RhY2snO1xuaW1wb3J0IHsgUkRTU3RhY2sgfSBmcm9tICcuLi9saWIvcmRzLXN0YWNrJztcbmltcG9ydCB7IFN0YWNrLCBBcm5Db21wb25lbnRzIH0gZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBQaXBlbGluZVN0YWNrIH0gZnJvbSAnLi4vbGliL3BpcGVsaW5lLXN0YWNrJztcbmltcG9ydCB7IFN0b3JhZ2VTdGFjayB9IGZyb20gXCIuLi9saWIvc3RvcmFnZS1zdGFja1wiO1xuaW1wb3J0IHsgTGFyYXZlbFN0YWNrIH0gZnJvbSAnLi4vbGliL2xhcmF2ZWwtc3RhY2snO1xuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IHsgSWFtQ29tbW9uU3RhY2sgfSBmcm9tICcuLi9saWIvaWFtLWNvbW1vbi1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbmNvbnN0IHZwY1N0YWNrID0gbmV3IFZwY1N0YWNrKGFwcCwgJ1ZQQycpO1xuY29uc3QgcmRzU3RhY2sgPSBuZXcgUkRTU3RhY2soYXBwLCAnRGF0YWJhc2UnLCB7XG4gICAgdnBjOiB2cGNTdGFjay52cGMsXG59KTtcbmNvbnN0IGlhbUNvbW1vblN0YWNrID0gbmV3IElhbUNvbW1vblN0YWNrKGFwcCwgJ0lhbUNvbW1vbicsIHtcbiAgICB2cGM6IHZwY1N0YWNrLnZwYyxcbn0pXG5jb25zdCBzdG9yYWdlU3RhY2sgPSBuZXcgU3RvcmFnZVN0YWNrKGFwcCwgJ1N0b3JhZ2UyJywge1xuICAgIHZwYzogdnBjU3RhY2sudnBjLFxuICAgIGVmc0FjY2Vzc1NlY3VyaXR5R3JvdXA6IGlhbUNvbW1vblN0YWNrLmVmc0FjY2Vzc1NlY3VyaXR5R3JvdXAsXG4gICAgT0FJOiBpYW1Db21tb25TdGFjay5PQUlcbn0pO1xuXG5jb25zdCBsYXJhdmVsU3RhY2sgPSBuZXcgTGFyYXZlbFN0YWNrKGFwcCwgJ0xhcmF2ZWwnLCB7XG4gICAgdnBjOiB2cGNTdGFjay52cGMsXG4gICAgZWZzOiBzdG9yYWdlU3RhY2suRUZTSW5zdGFuY2UsXG4gICAgczM6IHN0b3JhZ2VTdGFjay5TM0J1Y2tldCxcbiAgICBvYWk6IHN0b3JhZ2VTdGFjay5PQUksXG4gICAgZGF0YWJhc2VBY2Nlc3NTZWN1cml0eUdyb3VwOiByZHNTdGFjay5kYXRhYmFzZUFjY2Vzc1NlY3VyaXR5R3JvdXAsXG4gICAgZWZzQWNjZXNzU2VjdXJpdHlHcm91cDogc3RvcmFnZVN0YWNrLmVmc0FjY2Vzc1NlY3VyaXR5R3JvdXAsXG4gICAgcmRzRW5kcG9pbnQ6IHJkc1N0YWNrLm15U1FMUkRTSW5zdGFuY2UuZGJJbnN0YW5jZUVuZHBvaW50QWRkcmVzcyxcbiAgICByZHNEYjogcmRzU3RhY2suZGF0YWJhc2UsXG4gICAgcmRzUG9ydDogcmRzU3RhY2subXlTUUxSRFNJbnN0YW5jZS5kYkluc3RhbmNlRW5kcG9pbnRQb3J0LFxuICAgIHJkc0NyZWRlbnRpYWxzOiByZHNTdGFjay5jcmVkZW50aWFsc1xufSk7XG5cbm5ldyBQaXBlbGluZVN0YWNrKGFwcCwgJ1BpcGVsaW5lMicsIHtcbiAgICBzMzogc3RvcmFnZVN0YWNrLlMzQnVja2V0LFxuICAgIHZwYzogdnBjU3RhY2sudnBjLFxuICAgIGVmczogc3RvcmFnZVN0YWNrLkVGU0luc3RhbmNlLFxuICAgIGNsb3VkZnJvbnQ6IGxhcmF2ZWxTdGFjay5jbG91ZGZyb250LFxuICAgIGRhdGFiYXNlQWNjZXNzU2VjdXJpdHlHcm91cDogcmRzU3RhY2suZGF0YWJhc2VBY2Nlc3NTZWN1cml0eUdyb3VwLFxuICAgIGVmc0FjY2Vzc1NlY3VyaXR5R3JvdXA6IHN0b3JhZ2VTdGFjay5lZnNBY2Nlc3NTZWN1cml0eUdyb3VwLFxuICAgIGVncmVzc1NlY3VyaXR5R3JvdXA6IHZwY1N0YWNrLmVncmVzc1NlY3VyaXR5R3JvdXAsXG4gICAgbGFyYXZlbEFybjogbGFyYXZlbFN0YWNrLmZvcm1hdEFybih7XG4gICAgICAgIHNlcnZpY2U6ICdjbG91ZGZvcm1hdGlvbicsXG4gICAgICAgIHJlc291cmNlOiAnc3RhY2snLFxuICAgIH0pLFxuICAgIHJkc0FybjogcmRzU3RhY2subXlTUUxSRFNJbnN0YW5jZS5pbnN0YW5jZUFybixcbiAgICByZHNFbmRwb2ludDogcmRzU3RhY2subXlTUUxSRFNJbnN0YW5jZS5kYkluc3RhbmNlRW5kcG9pbnRBZGRyZXNzLFxuICAgIC8vIHJkc0RiVXNlcjogcmRzU3RhY2sudXNlcm5hbWUsXG4gICAgLy8gcmRzRGJQYXNzd29yZDogcmRzU3RhY2suc2VjcmV0LFxuICAgIHJkc1NlY3JldDogcmRzU3RhY2suc2VjcmV0LFxuICAgIHJkc0RiOiByZHNTdGFjay5kYXRhYmFzZSxcbiAgICByZHNQb3J0OiByZHNTdGFjay5teVNRTFJEU0luc3RhbmNlLmRiSW5zdGFuY2VFbmRwb2ludFBvcnQsXG4gICAgLy9sYW1iZGE6IHdwU3RhY2subGFtYmRhXG59KTtcblxuYXBwLnN5bnRoKCk7XG4iXX0=