{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "VPC": {
        "id": "VPC",
        "path": "VPC",
        "children": {
          "CustomVPC": {
            "id": "CustomVPC",
            "path": "VPC/CustomVPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "VPC/CustomVPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "VPC/CustomVPC"
                      }
                    ]
                  }
                }
              },
              "publicSubnetSubnet1": {
                "id": "publicSubnetSubnet1",
                "path": "VPC/CustomVPC/publicSubnetSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/26",
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "publicSubnet"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1RouteTable86B056A0"
                        },
                        "subnetId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1SubnetA78537E2"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1RouteTable86B056A0"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "CustomVPCIGWCB65EB6B"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "VPC/CustomVPC/publicSubnetSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "CustomVPCpublicSubnetSubnet1EIPE84D4E1E",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1SubnetA78537E2"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "publicSubnetSubnet2": {
                "id": "publicSubnetSubnet2",
                "path": "VPC/CustomVPC/publicSubnetSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VPC/CustomVPC/publicSubnetSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.64/26",
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "publicSubnet"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VPC/CustomVPC/publicSubnetSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VPC/CustomVPC/publicSubnetSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/publicSubnetSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VPC/CustomVPC/publicSubnetSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCpublicSubnetSubnet2RouteTable8E63F66E"
                        },
                        "subnetId": {
                          "Ref": "CustomVPCpublicSubnetSubnet2SubnetD74F3E5F"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VPC/CustomVPC/publicSubnetSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCpublicSubnetSubnet2RouteTable8E63F66E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "CustomVPCIGWCB65EB6B"
                        }
                      }
                    }
                  }
                }
              },
              "privateSubnetSubnet1": {
                "id": "privateSubnetSubnet1",
                "path": "VPC/CustomVPC/privateSubnetSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VPC/CustomVPC/privateSubnetSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.128/26",
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "privateSubnet"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/privateSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VPC/CustomVPC/privateSubnetSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VPC/CustomVPC/privateSubnetSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/privateSubnetSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VPC/CustomVPC/privateSubnetSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCprivateSubnetSubnet1RouteTableF6E14B89"
                        },
                        "subnetId": {
                          "Ref": "CustomVPCprivateSubnetSubnet1Subnet6940697D"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VPC/CustomVPC/privateSubnetSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCprivateSubnetSubnet1RouteTableF6E14B89"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1NATGatewayDDE2B218"
                        }
                      }
                    }
                  }
                }
              },
              "privateSubnetSubnet2": {
                "id": "privateSubnetSubnet2",
                "path": "VPC/CustomVPC/privateSubnetSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "VPC/CustomVPC/privateSubnetSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.192/26",
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "privateSubnet"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/privateSubnetSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "VPC/CustomVPC/privateSubnetSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "VPC/CustomVPC/privateSubnetSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "CustomVPC616E3387"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "VPC/CustomVPC/privateSubnetSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "VPC/CustomVPC/privateSubnetSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCprivateSubnetSubnet2RouteTable02C5A89E"
                        },
                        "subnetId": {
                          "Ref": "CustomVPCprivateSubnetSubnet2Subnet4D44975F"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "VPC/CustomVPC/privateSubnetSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "CustomVPCprivateSubnetSubnet2RouteTable02C5A89E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "CustomVPCpublicSubnetSubnet1NATGatewayDDE2B218"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "VPC/CustomVPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "VPC/CustomVPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "VPC/CustomVPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "CustomVPC616E3387"
                    },
                    "internetGatewayId": {
                      "Ref": "CustomVPCIGWCB65EB6B"
                    }
                  }
                }
              }
            }
          },
          "egress-security-group": {
            "id": "egress-security-group",
            "path": "VPC/egress-security-group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "VPC/egress-security-group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "VPC/egress-security-group",
                    "groupName": "EgressSecurityGroup",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Ref": "CustomVPC616E3387"
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "VPC/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "VPC/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "VPC/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "VPC/Exports",
            "children": {
              "Output{\"Ref\":\"CustomVPC616E3387\"}": {
                "id": "Output{\"Ref\":\"CustomVPC616E3387\"}",
                "path": "VPC/Exports/Output{\"Ref\":\"CustomVPC616E3387\"}"
              },
              "Output{\"Ref\":\"CustomVPCprivateSubnetSubnet1Subnet6940697D\"}": {
                "id": "Output{\"Ref\":\"CustomVPCprivateSubnetSubnet1Subnet6940697D\"}",
                "path": "VPC/Exports/Output{\"Ref\":\"CustomVPCprivateSubnetSubnet1Subnet6940697D\"}"
              },
              "Output{\"Ref\":\"CustomVPCprivateSubnetSubnet2Subnet4D44975F\"}": {
                "id": "Output{\"Ref\":\"CustomVPCprivateSubnetSubnet2Subnet4D44975F\"}",
                "path": "VPC/Exports/Output{\"Ref\":\"CustomVPCprivateSubnetSubnet2Subnet4D44975F\"}"
              },
              "Output{\"Fn::GetAtt\":[\"egresssecuritygroup21695EBD\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"egresssecuritygroup21695EBD\",\"GroupId\"]}",
                "path": "VPC/Exports/Output{\"Fn::GetAtt\":[\"egresssecuritygroup21695EBD\",\"GroupId\"]}"
              }
            }
          }
        }
      },
      "Database": {
        "id": "Database",
        "path": "Database",
        "children": {
          "wordpress_database_password": {
            "id": "wordpress_database_password",
            "path": "Database/wordpress_database_password",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Database/wordpress_database_password/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "generateSecretString": {
                      "excludePunctuation": true
                    }
                  }
                }
              }
            }
          },
          "rds-security-group": {
            "id": "rds-security-group",
            "path": "Database/rds-security-group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Database/rds-security-group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Database/rds-security-group",
                    "groupName": "RDSSecurityGroup",
                    "vpcId": {
                      "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
                    }
                  }
                }
              },
              "to Databaseingresssecuritygroup8E0A1F92:3306": {
                "id": "to Databaseingresssecuritygroup8E0A1F92:3306",
                "path": "Database/rds-security-group/to Databaseingresssecuritygroup8E0A1F92:3306",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                  "aws:cdk:cloudformation:props": {
                    "groupId": {
                      "Fn::GetAtt": [
                        "rdssecuritygroupFB88BAE5",
                        "GroupId"
                      ]
                    },
                    "ipProtocol": "tcp",
                    "description": "to Databaseingresssecuritygroup8E0A1F92:3306",
                    "destinationSecurityGroupId": {
                      "Fn::GetAtt": [
                        "ingresssecuritygroup39BFA35C",
                        "GroupId"
                      ]
                    },
                    "fromPort": 3306,
                    "toPort": 3306
                  }
                }
              }
            }
          },
          "ingress-security-group": {
            "id": "ingress-security-group",
            "path": "Database/ingress-security-group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Database/ingress-security-group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "Database/ingress-security-group",
                    "groupName": "IngressSecurityGroup",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "255.255.255.255/32",
                        "description": "Disallow all traffic",
                        "ipProtocol": "icmp",
                        "fromPort": 252,
                        "toPort": 86
                      }
                    ],
                    "vpcId": {
                      "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
                    }
                  }
                }
              },
              "from Databaserdssecuritygroup237E7801:3306": {
                "id": "from Databaserdssecuritygroup237E7801:3306",
                "path": "Database/ingress-security-group/from Databaserdssecuritygroup237E7801:3306",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "ipProtocol": "tcp",
                    "description": "from Databaserdssecuritygroup237E7801:3306",
                    "fromPort": 3306,
                    "groupId": {
                      "Fn::GetAtt": [
                        "ingresssecuritygroup39BFA35C",
                        "GroupId"
                      ]
                    },
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "rdssecuritygroupFB88BAE5",
                        "GroupId"
                      ]
                    },
                    "toPort": 3306
                  }
                }
              }
            }
          },
          "mysql-rds-instance": {
            "id": "mysql-rds-instance",
            "path": "Database/mysql-rds-instance",
            "children": {
              "SubnetGroup": {
                "id": "SubnetGroup",
                "path": "Database/mysql-rds-instance/SubnetGroup",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "Database/mysql-rds-instance/SubnetGroup/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnet group for mysql-rds-instance database",
                        "subnetIds": [
                          {
                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                          },
                          {
                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Database/mysql-rds-instance/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                  "aws:cdk:cloudformation:props": {
                    "dbInstanceClass": "db.t2.small",
                    "allocatedStorage": "25",
                    "autoMinorVersionUpgrade": true,
                    "backupRetentionPeriod": 3,
                    "copyTagsToSnapshot": true,
                    "dbName": "Wordpress",
                    "dbSubnetGroupName": {
                      "Ref": "mysqlrdsinstanceSubnetGroupE26509B1"
                    },
                    "deletionProtection": false,
                    "engine": "mysql",
                    "masterUsername": "wordpress_admin",
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "wordpressdatabasepasswordD7AA4609"
                          },
                          ":SecretString:::}}"
                        ]
                      ]
                    },
                    "multiAz": false,
                    "port": "3306",
                    "publiclyAccessible": false,
                    "storageEncrypted": true,
                    "storageType": "gp2",
                    "vpcSecurityGroups": [
                      {
                        "Fn::GetAtt": [
                          "ingresssecuritygroup39BFA35C",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Database/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Database/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Database/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "Database/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"rdssecuritygroupFB88BAE5\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"rdssecuritygroupFB88BAE5\",\"GroupId\"]}",
                "path": "Database/Exports/Output{\"Fn::GetAtt\":[\"rdssecuritygroupFB88BAE5\",\"GroupId\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Address\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Address\"]}",
                "path": "Database/Exports/Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Address\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Port\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Port\"]}",
                "path": "Database/Exports/Output{\"Fn::GetAtt\":[\"mysqlrdsinstance67C7D162\",\"Endpoint.Port\"]}"
              },
              "Output{\"Ref\":\"mysqlrdsinstance67C7D162\"}": {
                "id": "Output{\"Ref\":\"mysqlrdsinstance67C7D162\"}",
                "path": "Database/Exports/Output{\"Ref\":\"mysqlrdsinstance67C7D162\"}"
              },
              "Output{\"Ref\":\"wordpressdatabasepasswordD7AA4609\"}": {
                "id": "Output{\"Ref\":\"wordpressdatabasepasswordD7AA4609\"}",
                "path": "Database/Exports/Output{\"Ref\":\"wordpressdatabasepasswordD7AA4609\"}"
              }
            }
          }
        }
      },
      "IamCommon": {
        "id": "IamCommon",
        "path": "IamCommon",
        "children": {
          "efs-security-group": {
            "id": "efs-security-group",
            "path": "IamCommon/efs-security-group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "IamCommon/efs-security-group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "IamCommon/efs-security-group",
                    "groupName": "EFSSecurityGroup",
                    "vpcId": {
                      "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
                    }
                  }
                }
              }
            }
          },
          "OAI": {
            "id": "OAI",
            "path": "IamCommon/OAI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "IamCommon/OAI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "IamCommon/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "IamCommon/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "IamCommon/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "IamCommon/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"efssecuritygroup5B03FC4E\",\"GroupId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"efssecuritygroup5B03FC4E\",\"GroupId\"]}",
                "path": "IamCommon/Exports/Output{\"Fn::GetAtt\":[\"efssecuritygroup5B03FC4E\",\"GroupId\"]}"
              },
              "Output{\"Fn::GetAtt\":[\"OAIE1EFC67F\",\"S3CanonicalUserId\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"OAIE1EFC67F\",\"S3CanonicalUserId\"]}",
                "path": "IamCommon/Exports/Output{\"Fn::GetAtt\":[\"OAIE1EFC67F\",\"S3CanonicalUserId\"]}"
              },
              "Output{\"Ref\":\"OAIE1EFC67F\"}": {
                "id": "Output{\"Ref\":\"OAIE1EFC67F\"}",
                "path": "IamCommon/Exports/Output{\"Ref\":\"OAIE1EFC67F\"}"
              }
            }
          }
        }
      },
      "Storage2": {
        "id": "Storage2",
        "path": "Storage2",
        "children": {
          "Wordpress_EFS": {
            "id": "Wordpress_EFS",
            "path": "Storage2/Wordpress_EFS",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Storage2/Wordpress_EFS/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::FileSystem",
                  "aws:cdk:cloudformation:props": {
                    "encrypted": true,
                    "fileSystemTags": [
                      {
                        "key": "Name",
                        "value": "Storage2/Wordpress_EFS"
                      }
                    ],
                    "performanceMode": "generalPurpose",
                    "throughputMode": "bursting"
                  }
                }
              },
              "EfsSecurityGroup": {
                "id": "EfsSecurityGroup",
                "path": "Storage2/Wordpress_EFS/EfsSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Storage2/Wordpress_EFS/EfsSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Storage2/Wordpress_EFS/EfsSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Storage2/Wordpress_EFS"
                          }
                        ],
                        "vpcId": {
                          "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
                        }
                      }
                    }
                  },
                  "from IamCommonefssecuritygroup05CCF9F5:2049": {
                    "id": "from IamCommonefssecuritygroup05CCF9F5:2049",
                    "path": "Storage2/Wordpress_EFS/EfsSecurityGroup/from IamCommonefssecuritygroup05CCF9F5:2049",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from IamCommonefssecuritygroup05CCF9F5:2049",
                        "fromPort": 2049,
                        "groupId": {
                          "Fn::GetAtt": [
                            "WordpressEFSEfsSecurityGroup34FBE5C3",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttefssecuritygroup5B03FC4EGroupId967354AA"
                        },
                        "toPort": 2049
                      }
                    }
                  },
                  "IamCommonefssecuritygroup05CCF9F5:2049 from": {
                    "id": "IamCommonefssecuritygroup05CCF9F5:2049 from",
                    "path": "Storage2/Wordpress_EFS/EfsSecurityGroup/IamCommonefssecuritygroup05CCF9F5:2049 from",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttefssecuritygroup5B03FC4EGroupId967354AA"
                        },
                        "ipProtocol": "tcp",
                        "description": "to Storage2WordpressEFSEfsSecurityGroup2480AC2B:2049",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "WordpressEFSEfsSecurityGroup34FBE5C3",
                            "GroupId"
                          ]
                        },
                        "fromPort": 2049,
                        "toPort": 2049
                      }
                    }
                  },
                  "from Databaserdssecuritygroup237E7801:2049": {
                    "id": "from Databaserdssecuritygroup237E7801:2049",
                    "path": "Storage2/Wordpress_EFS/EfsSecurityGroup/from Databaserdssecuritygroup237E7801:2049",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "from Databaserdssecuritygroup237E7801:2049",
                        "fromPort": 2049,
                        "groupId": {
                          "Fn::GetAtt": [
                            "WordpressEFSEfsSecurityGroup34FBE5C3",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttrdssecuritygroupFB88BAE5GroupId90A39632"
                        },
                        "toPort": 2049
                      }
                    }
                  },
                  "Databaserdssecuritygroup237E7801:2049 from": {
                    "id": "Databaserdssecuritygroup237E7801:2049 from",
                    "path": "Storage2/Wordpress_EFS/EfsSecurityGroup/Databaserdssecuritygroup237E7801:2049 from",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttrdssecuritygroupFB88BAE5GroupId90A39632"
                        },
                        "ipProtocol": "tcp",
                        "description": "to Storage2WordpressEFSEfsSecurityGroup2480AC2B:2049",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "WordpressEFSEfsSecurityGroup34FBE5C3",
                            "GroupId"
                          ]
                        },
                        "fromPort": 2049,
                        "toPort": 2049
                      }
                    }
                  }
                }
              },
              "EfsMountTarget1": {
                "id": "EfsMountTarget1",
                "path": "Storage2/Wordpress_EFS/EfsMountTarget1",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "WordpressEFSDBDB4AAE"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "WordpressEFSEfsSecurityGroup34FBE5C3",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                    }
                  }
                }
              },
              "EfsMountTarget2": {
                "id": "EfsMountTarget2",
                "path": "Storage2/Wordpress_EFS/EfsMountTarget2",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EFS::MountTarget",
                  "aws:cdk:cloudformation:props": {
                    "fileSystemId": {
                      "Ref": "WordpressEFSDBDB4AAE"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "WordpressEFSEfsSecurityGroup34FBE5C3",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnetId": {
                      "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                    }
                  }
                }
              },
              "AccessPoint": {
                "id": "AccessPoint",
                "path": "Storage2/Wordpress_EFS/AccessPoint",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Storage2/Wordpress_EFS/AccessPoint/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EFS::AccessPoint",
                      "aws:cdk:cloudformation:props": {
                        "fileSystemId": {
                          "Ref": "WordpressEFSDBDB4AAE"
                        },
                        "posixUser": {
                          "uid": "1001",
                          "gid": "1001"
                        },
                        "rootDirectory": {
                          "creationInfo": {
                            "ownerGid": "1001",
                            "ownerUid": "1001",
                            "permissions": "750"
                          },
                          "path": "/"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Wordpress_S3": {
            "id": "Wordpress_S3",
            "path": "Storage2/Wordpress_S3",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Storage2/Wordpress_S3/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "Storage2/Wordpress_S3/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "Storage2/Wordpress_S3/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Storage2/Wordpress_S3/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "WordpressS3523C628C"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttOAIE1EFC67FS3CanonicalUserId143C2ABE"
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "WordpressS3523C628C",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "WordpressS3523C628C",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Storage2/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Storage2/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Storage2/CDKMetadata/Condition"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "Storage2/Exports",
            "children": {
              "Output{\"Ref\":\"WordpressEFSAccessPoint0BAB0662\"}": {
                "id": "Output{\"Ref\":\"WordpressEFSAccessPoint0BAB0662\"}",
                "path": "Storage2/Exports/Output{\"Ref\":\"WordpressEFSAccessPoint0BAB0662\"}"
              },
              "Output{\"Ref\":\"WordpressEFSDBDB4AAE\"}": {
                "id": "Output{\"Ref\":\"WordpressEFSDBDB4AAE\"}",
                "path": "Storage2/Exports/Output{\"Ref\":\"WordpressEFSDBDB4AAE\"}"
              },
              "Output{\"Fn::GetAtt\":[\"WordpressS3523C628C\",\"RegionalDomainName\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"WordpressS3523C628C\",\"RegionalDomainName\"]}",
                "path": "Storage2/Exports/Output{\"Fn::GetAtt\":[\"WordpressS3523C628C\",\"RegionalDomainName\"]}"
              },
              "Output{\"Ref\":\"WordpressS3523C628C\"}": {
                "id": "Output{\"Ref\":\"WordpressS3523C628C\"}",
                "path": "Storage2/Exports/Output{\"Ref\":\"WordpressS3523C628C\"}"
              }
            }
          }
        }
      },
      "Laravel": {
        "id": "Laravel",
        "path": "Laravel",
        "children": {
          "php-74-fpm": {
            "id": "php-74-fpm",
            "path": "Laravel/php-74-fpm"
          },
          "Laravel_Lambda": {
            "id": "Laravel_Lambda",
            "path": "Laravel/Laravel_Lambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Laravel/Laravel_Lambda/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_Lambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Laravel/Laravel_Lambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Laravel/Laravel_Lambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "elasticfilesystem:ClientMount",
                                  "Condition": {
                                    "StringEquals": {
                                      "elasticfilesystem:AccessPointArn": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":elasticfilesystem:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":access-point/",
                                            {
                                              "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressEFSAccessPoint0BAB0662B0F131DF"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  },
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "elasticfilesystem:ClientWrite",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":elasticfilesystem:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":file-system/",
                                        {
                                          "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressEFSDBDB4AAEFE31A04A"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LaravelLambdaServiceRoleDefaultPolicy0D46398D",
                            "roles": [
                              {
                                "Ref": "LaravelLambdaServiceRoleD4A29864"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Laravel/Laravel_Lambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Laravel/Laravel_Lambda/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Laravel/Laravel_Lambda/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Laravel/Laravel_Lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9S3BucketA0B7BC87"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9S3VersionKey9FB324DF"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9S3VersionKey9FB324DF"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "public/index.php",
                    "role": {
                      "Fn::GetAtt": [
                        "LaravelLambdaServiceRoleD4A29864",
                        "Arn"
                      ]
                    },
                    "runtime": "provided",
                    "description": "Generated on: 2020-10-07T22:03:13.220Z",
                    "environment": {
                      "variables": {
                        "MY_VARIABLE": "test",
                        "WORDPRESS_DB_ENDPOINT": {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttmysqlrdsinstance67C7D162EndpointAddress5C225769"
                        },
                        "WORDPRESS_DB_PORT": {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttmysqlrdsinstance67C7D162EndpointPortEEFD6425"
                        },
                        "WORDPRESS_DB_NAME": "Wordpress",
                        "WORDPRESS_DB_USERNAME": "wordpress_admin",
                        "WORDPRESS_DB_PASSWORD": ""
                      }
                    },
                    "layers": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:lambda:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":209497400698:layer:php-74-fpm:11"
                          ]
                        ]
                      }
                    ],
                    "memorySize": 1024,
                    "timeout": 28,
                    "vpcConfig": {
                      "subnetIds": [
                        {
                          "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                        },
                        {
                          "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                        }
                      ],
                      "securityGroupIds": [
                        {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttrdssecuritygroupFB88BAE5GroupId90A39632"
                        },
                        {
                          "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttefssecuritygroup5B03FC4EGroupId967354AA"
                        }
                      ]
                    }
                  }
                }
              },
              "Version2020-10-07T22:03:43.195Z": {
                "id": "Version2020-10-07T22:03:43.195Z",
                "path": "Laravel/Laravel_Lambda/Version2020-10-07T22:03:43.195Z",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_Lambda/Version2020-10-07T22:03:43.195Z/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Version",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LaravelLambdaDA20D9DA"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "Laravel/AssetParameters",
            "children": {
              "714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9": {
                "id": "714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9",
                "path": "Laravel/AssetParameters/714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "Laravel/AssetParameters/714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "Laravel/AssetParameters/714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "Laravel/AssetParameters/714eb2f6f0e728c60184d1d79a45ab7a6f2d01c7853ffa8eff295f22a8d475e9/ArtifactHash"
                  }
                }
              }
            }
          },
          "Laravel_VersionAlias": {
            "id": "Laravel_VersionAlias",
            "path": "Laravel/Laravel_VersionAlias",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Laravel/Laravel_VersionAlias/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Alias",
                  "aws:cdk:cloudformation:props": {
                    "functionName": {
                      "Ref": "LaravelLambdaDA20D9DA"
                    },
                    "functionVersion": {
                      "Fn::GetAtt": [
                        "LaravelLambdaVersion20201007T220343195ZA23949DB",
                        "Version"
                      ]
                    },
                    "name": "Prod"
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "Laravel/Laravel_VersionAlias/ScalingRole"
              }
            }
          },
          "Laravel_DeploymentGroup": {
            "id": "Laravel_DeploymentGroup",
            "path": "Laravel/Laravel_DeploymentGroup",
            "children": {
              "Application": {
                "id": "Application",
                "path": "Laravel/Laravel_DeploymentGroup/Application",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_DeploymentGroup/Application/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::CodeDeploy::Application",
                      "aws:cdk:cloudformation:props": {
                        "computePlatform": "Lambda"
                      }
                    }
                  }
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Laravel/Laravel_DeploymentGroup/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_DeploymentGroup/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "codedeploy.",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ".",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Laravel/Laravel_DeploymentGroup/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeDeploy::DeploymentGroup",
                  "aws:cdk:cloudformation:props": {
                    "applicationName": {
                      "Ref": "LaravelDeploymentGroupApplicationC6DB8B6B"
                    },
                    "serviceRoleArn": {
                      "Fn::GetAtt": [
                        "LaravelDeploymentGroupServiceRole16963BDD",
                        "Arn"
                      ]
                    },
                    "autoRollbackConfiguration": {
                      "enabled": true,
                      "events": [
                        "DEPLOYMENT_FAILURE"
                      ]
                    },
                    "deploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
                    "deploymentStyle": {
                      "deploymentType": "BLUE_GREEN",
                      "deploymentOption": "WITH_TRAFFIC_CONTROL"
                    }
                  }
                }
              }
            }
          },
          "Laravel_APIGateway": {
            "id": "Laravel_APIGateway",
            "path": "Laravel/Laravel_APIGateway",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Laravel/Laravel_APIGateway/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "Laravel_APIGateway"
                  }
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "Laravel/Laravel_APIGateway/CloudWatchRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_APIGateway/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Account": {
                "id": "Account",
                "path": "Laravel/Laravel_APIGateway/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "LaravelAPIGatewayCloudWatchRole9EC1935E",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "Laravel/Laravel_APIGateway/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_APIGateway/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "LaravelAPIGateway4D5AAA65"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    }
                  }
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "Laravel/Laravel_APIGateway/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Laravel/Laravel_APIGateway/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "LaravelAPIGateway4D5AAA65"
                        },
                        "deploymentId": {
                          "Ref": "LaravelAPIGatewayDeployment649A08CF707538fb48a25c9dec8cd8138ae60ce5"
                        },
                        "stageName": "prod"
                      }
                    }
                  }
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "Laravel/Laravel_APIGateway/Endpoint"
              },
              "Default": {
                "id": "Default",
                "path": "Laravel/Laravel_APIGateway/Default",
                "children": {
                  "{proxy+}": {
                    "id": "{proxy+}",
                    "path": "Laravel/Laravel_APIGateway/Default/{proxy+}",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Laravel/Laravel_APIGateway/Default/{proxy+}/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "LaravelAPIGateway4D5AAA65",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "{proxy+}",
                            "restApiId": {
                              "Ref": "LaravelAPIGateway4D5AAA65"
                            }
                          }
                        }
                      },
                      "ANY": {
                        "id": "ANY",
                        "path": "Laravel/Laravel_APIGateway/Default/{proxy+}/ANY",
                        "children": {
                          "ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}": {
                            "id": "ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}",
                            "path": "Laravel/Laravel_APIGateway/Default/{proxy+}/ANY/ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "LaravelLambdaDA20D9DA",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "LaravelAPIGateway4D5AAA65"
                                      },
                                      "/",
                                      {
                                        "Ref": "LaravelAPIGatewayDeploymentStageprodE1D91F18"
                                      },
                                      "/*/*"
                                    ]
                                  ]
                                }
                              }
                            }
                          },
                          "ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}": {
                            "id": "ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}",
                            "path": "Laravel/Laravel_APIGateway/Default/{proxy+}/ANY/ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "LaravelLambdaDA20D9DA",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "LaravelAPIGateway4D5AAA65"
                                      },
                                      "/test-invoke-stage/*/*"
                                    ]
                                  ]
                                }
                              }
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "Laravel/Laravel_APIGateway/Default/{proxy+}/ANY/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "ANY",
                                "resourceId": {
                                  "Ref": "LaravelAPIGatewayproxyB4E44762"
                                },
                                "restApiId": {
                                  "Ref": "LaravelAPIGateway4D5AAA65"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "LaravelLambdaDA20D9DA",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "ANY": {
                    "id": "ANY",
                    "path": "Laravel/Laravel_APIGateway/Default/ANY",
                    "children": {
                      "ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..": {
                        "id": "ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..",
                        "path": "Laravel/Laravel_APIGateway/Default/ANY/ApiPermission.LaravelLaravelAPIGateway7D4F1113.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LaravelLambdaDA20D9DA",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "LaravelAPIGateway4D5AAA65"
                                  },
                                  "/",
                                  {
                                    "Ref": "LaravelAPIGatewayDeploymentStageprodE1D91F18"
                                  },
                                  "/*/"
                                ]
                              ]
                            }
                          }
                        }
                      },
                      "ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..": {
                        "id": "ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..",
                        "path": "Laravel/Laravel_APIGateway/Default/ANY/ApiPermission.Test.LaravelLaravelAPIGateway7D4F1113.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "LaravelLambdaDA20D9DA",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "LaravelAPIGateway4D5AAA65"
                                  },
                                  "/test-invoke-stage/*/"
                                ]
                              ]
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "Laravel/Laravel_APIGateway/Default/ANY/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "ANY",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "LaravelAPIGateway4D5AAA65",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "LaravelAPIGateway4D5AAA65"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "AWS_PROXY",
                              "uri": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":apigateway:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":lambda:path/2015-03-31/functions/",
                                    {
                                      "Fn::GetAtt": [
                                        "LaravelLambdaDA20D9DA",
                                        "Arn"
                                      ]
                                    },
                                    "/invocations"
                                  ]
                                ]
                              },
                              "integrationHttpMethod": "POST"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Laravel_Cloudfront": {
            "id": "Laravel_Cloudfront",
            "path": "Laravel/Laravel_Cloudfront",
            "children": {
              "CFDistribution": {
                "id": "CFDistribution",
                "path": "Laravel/Laravel_Cloudfront/CFDistribution",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "defaultRootObject": "index.php",
                      "httpVersion": "http2",
                      "priceClass": "PriceClass_100",
                      "ipv6Enabled": true,
                      "origins": [
                        {
                          "id": "origin1",
                          "domainName": {
                            "Fn::ImportValue": "Storage2:ExportsOutputFnGetAttWordpressS3523C628CRegionalDomainNameFF6EA16D"
                          },
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Fn::ImportValue": "IamCommon:ExportsOutputRefOAIE1EFC67F0E3C3AB5"
                                  }
                                ]
                              ]
                            }
                          },
                          "connectionAttempts": 3,
                          "connectionTimeout": 10
                        },
                        {
                          "id": "origin2",
                          "domainName": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Ref": "LaravelAPIGateway4D5AAA65"
                                },
                                ".execute-api.",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                }
                              ]
                            ]
                          },
                          "originPath": {
                            "Fn::Join": [
                              "",
                              [
                                "/",
                                {
                                  "Ref": "LaravelAPIGatewayDeploymentStageprodE1D91F18"
                                }
                              ]
                            ]
                          },
                          "customOriginConfig": {
                            "httpPort": 80,
                            "httpsPort": 443,
                            "originKeepaliveTimeout": 5,
                            "originReadTimeout": 30,
                            "originProtocolPolicy": "https-only",
                            "originSslProtocols": [
                              "TLSv1.2"
                            ]
                          },
                          "connectionAttempts": 3,
                          "connectionTimeout": 10
                        }
                      ],
                      "defaultCacheBehavior": {
                        "allowedMethods": [
                          "DELETE",
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PATCH",
                          "POST",
                          "PUT"
                        ],
                        "cachedMethods": [
                          "GET",
                          "HEAD"
                        ],
                        "compress": true,
                        "defaultTtl": 0,
                        "forwardedValues": {
                          "queryString": true,
                          "cookies": {
                            "forward": "all"
                          },
                          "headers": [
                            "*"
                          ]
                        },
                        "maxTtl": 0,
                        "minTtl": 0,
                        "targetOriginId": "origin2",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "cacheBehaviors": [
                        {
                          "allowedMethods": [
                            "GET",
                            "HEAD"
                          ],
                          "cachedMethods": [
                            "GET",
                            "HEAD"
                          ],
                          "compress": true,
                          "forwardedValues": {
                            "queryString": false,
                            "cookies": {
                              "forward": "none"
                            }
                          },
                          "targetOriginId": "origin1",
                          "viewerProtocolPolicy": "redirect-to-https",
                          "pathPattern": "/public/assets/*"
                        }
                      ],
                      "viewerCertificate": {
                        "cloudFrontDefaultCertificate": true
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Laravel/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Laravel/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Laravel/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "Pipeline2": {
        "id": "Pipeline2",
        "path": "Pipeline2",
        "children": {
          "codePipelineUser2": {
            "id": "codePipelineUser2",
            "path": "Pipeline2/codePipelineUser2",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pipeline2/codePipelineUser2/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codepipeline.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      }
                    ],
                    "policies": [
                      {
                        "policyName": "cloudformations",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "cloudformation:DescribeStacks",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "roleName": "codePipelineUser2"
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "Pipeline2/codePipelineUser2/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/codePipelineUser2/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "Pipeline2ArtifactsBucketBBAC8B82",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "Pipeline2ArtifactsBucketBBAC8B82",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "codePipelineUser2DefaultPolicy5E342A2A",
                        "roles": [
                          {
                            "Ref": "codePipelineUser266D1493D"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "codeBuildUser2": {
            "id": "codeBuildUser2",
            "path": "Pipeline2/codeBuildUser2",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pipeline2/codeBuildUser2/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codebuild.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AmazonS3FullAccess"
                          ]
                        ]
                      }
                    ],
                    "policies": [
                      {
                        "policyName": "cloudformations",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "cloudformation:*",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "cloudfront",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "cloudfront:GetDistribution",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "rds",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "rds:DescribeDBInstances",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":rds:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":db:",
                                    {
                                      "Fn::ImportValue": "Database:ExportsOutputRefmysqlrdsinstance67C7D1627276CB65"
                                    }
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "iam",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "iam:GetRole",
                                "iam:PassRole"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "secrets",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "secretsmanager:GetSecretValue",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::ImportValue": "Database:ExportsOutputRefwordpressdatabasepasswordD7AA46099426C91E"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "lambda",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "cloudwatch:DescribeAlarms",
                                "lambda:GetFunction",
                                "lambda:DeleteFunction",
                                "lambda:UpdateFunctionCode",
                                "lambda:UpdateFunctionConfiguration",
                                "lambda:ListVersionsByFunction",
                                "lambda:PublishVersion",
                                "lambda:UpdateAlias",
                                "lambda:GetAlias",
                                "lambda:GetProvisionedConcurrencyConfig"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      },
                      {
                        "policyName": "codedeploy",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:RegisterApplicationRevision"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "roleName": "codeBuildUser2"
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "Pipeline2/codeBuildUser2/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/codeBuildUser2/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "ec2:CreateNetworkInterfacePermission",
                              "Condition": {
                                "StringEquals": {
                                  "ec2:Subnet": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:aws:ec2:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":subnet/",
                                          {
                                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:aws:ec2:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":subnet/",
                                          {
                                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "ec2:AuthorizedService": "codebuild.amazonaws.com"
                                }
                              },
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:aws:ec2:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":network-interface/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "LambdaBuildCF1FE7ED"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "LambdaBuildCF1FE7ED"
                                      },
                                      ":*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "codebuild:CreateReportGroup",
                                "codebuild:CreateReport",
                                "codebuild:UpdateReport",
                                "codebuild:BatchPutTestCases"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":codebuild:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":report-group/",
                                    {
                                      "Ref": "LambdaBuildCF1FE7ED"
                                    },
                                    "-*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "Pipeline2ArtifactsBucketBBAC8B82",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "Pipeline2ArtifactsBucketBBAC8B82",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "codeBuildUser2DefaultPolicy3E53EECA",
                        "roles": [
                          {
                            "Ref": "codeBuildUser2840AB886"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "LambdaBuild": {
            "id": "LambdaBuild",
            "path": "Pipeline2/LambdaBuild",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pipeline2/LambdaBuild/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:4.0",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "GITHUB_TOKEN",
                          "type": "PLAINTEXT",
                          "value": "fcf79cc446807d5a05113ff1057b933bda755f6e"
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "codeBuildUser2840AB886",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": {
                        "Fn::Join": [
                          "",
                          [
                            "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"php\": 7.4\n      },\n      \"commands\": [\n        \"npm i\",\n        \"ls -la\",\n        \"cd laravel && composer install && npm i && npm run build && cd ../\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npm run build\",\n        \"aws s3 sync laravel/public/assets s3://",
                            {
                              "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressS3523C628C295C27F7"
                            },
                            " --exclude *.php\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"laravel\",\n    \"files\": [\n      \"**/*\"\n    ]\n  }\n}"
                          ]
                        ]
                      }
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                        "Arn"
                      ]
                    },
                    "fileSystemLocations": [
                      {
                        "identifier": "codebuild_efs",
                        "location": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressEFSDBDB4AAEFE31A04A"
                              },
                              ".efs.",
                              {
                                "Ref": "AWS::Region"
                              },
                              ".amazonaws.com:/export/lambda"
                            ]
                          ]
                        },
                        "mountOptions": "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport",
                        "mountPoint": "/mnt/efs",
                        "type": "EFS"
                      }
                    ],
                    "vpcConfig": {
                      "vpcId": {
                        "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
                      },
                      "subnets": [
                        {
                          "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                        },
                        {
                          "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                        }
                      ],
                      "securityGroupIds": [
                        {
                          "Fn::ImportValue": "Database:ExportsOutputFnGetAttrdssecuritygroupFB88BAE5GroupId90A39632"
                        },
                        {
                          "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttefssecuritygroup5B03FC4EGroupId967354AA"
                        },
                        {
                          "Fn::ImportValue": "VPC:ExportsOutputFnGetAttegresssecuritygroup21695EBDGroupId15DA57EC"
                        }
                      ]
                    }
                  }
                }
              },
              "PolicyDocument": {
                "id": "PolicyDocument",
                "path": "Pipeline2/LambdaBuild/PolicyDocument",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/LambdaBuild/PolicyDocument/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ec2:CreateNetworkInterface",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DeleteNetworkInterface",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeDhcpOptions",
                                "ec2:DescribeVpcs"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "LambdaBuildPolicyDocumentE6F63FBC",
                        "roles": [
                          {
                            "Ref": "codeBuildUser2840AB886"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Pipeline2": {
            "id": "Pipeline2",
            "path": "Pipeline2/Pipeline2",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion",
                                "kms:GenerateDataKey",
                                "kms:TagResource",
                                "kms:UntagResource"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "codePipelineUser266D1493D",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "codeBuildUser2840AB886",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "codeBuildUser2840AB886",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-pipeline20bd89e9d",
                        "targetKeyId": {
                          "Fn::GetAtt": [
                            "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "Pipeline2/Pipeline2/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pipeline2/Pipeline2/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": [
                                    "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "Pipeline2/Pipeline2/ArtifactsBucket/Notifications"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Pipeline2/Pipeline2/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "codePipelineUser266D1493D",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "Checkout",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_Checkout"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "ThirdParty",
                              "provider": "GitHub"
                            },
                            "configuration": {
                              "Owner": "timsilog",
                              "Repo": "testCICD",
                              "Branch": "master",
                              "OAuthToken": "fcf79cc446807d5a05113ff1057b933bda755f6e",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "Lambda_Build",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_Checkout"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "LambdaBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "LambdaBuildCF1FE7ED"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "Pipeline2ArtifactsBucketBBAC8B82"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": [
                            "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "restartExecutionOnUpdate": true
                  }
                }
              },
              "Source": {
                "id": "Source",
                "path": "Pipeline2/Pipeline2/Source",
                "children": {
                  "Checkout": {
                    "id": "Checkout",
                    "path": "Pipeline2/Pipeline2/Source/Checkout",
                    "children": {
                      "WebhookResource": {
                        "id": "WebhookResource",
                        "path": "Pipeline2/Pipeline2/Source/Checkout/WebhookResource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodePipeline::Webhook",
                          "aws:cdk:cloudformation:props": {
                            "authentication": "GITHUB_HMAC",
                            "authenticationConfiguration": {
                              "secretToken": "fcf79cc446807d5a05113ff1057b933bda755f6e"
                            },
                            "filters": [
                              {
                                "jsonPath": "$.ref",
                                "matchEquals": "refs/heads/{Branch}"
                              }
                            ],
                            "targetAction": "Checkout",
                            "targetPipeline": {
                              "Ref": "Pipeline27E937D7F"
                            },
                            "targetPipelineVersion": 1,
                            "registerWithThirdParty": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Build": {
                "id": "Build",
                "path": "Pipeline2/Pipeline2/Build",
                "children": {
                  "Lambda_Build": {
                    "id": "Lambda_Build",
                    "path": "Pipeline2/Pipeline2/Build/Lambda_Build",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "LambdaBuildCF1FE7ED",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "Pipeline2BuildLambdaBuildCodePipelineActionRoleDefaultPolicy122F6B93",
                                    "roles": [
                                      {
                                        "Ref": "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Pipeline2/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Pipeline2/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Pipeline2/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}