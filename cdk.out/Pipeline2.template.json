{
  "Resources": {
    "codePipelineUser266D1493D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "cloudformation:DescribeStacks",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudformations"
          }
        ],
        "RoleName": "codePipelineUser2"
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/codePipelineUser2/Resource"
      }
    },
    "codePipelineUser2DefaultPolicy5E342A2A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Pipeline2ArtifactsBucketBBAC8B82",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Pipeline2ArtifactsBucketBBAC8B82",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "codePipelineUser2DefaultPolicy5E342A2A",
        "Roles": [
          {
            "Ref": "codePipelineUser266D1493D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/codePipelineUser2/DefaultPolicy/Resource"
      }
    },
    "codeBuildUser2840AB886": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonS3FullAccess"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "cloudformation:*",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudformations"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "cloudfront:GetDistribution",
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "cloudfront"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "rds:DescribeDBInstances",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":rds:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":db:",
                        {
                          "Fn::ImportValue": "Database:ExportsOutputRefmysqlrdsinstance67C7D1627276CB65"
                        }
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "rds"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iam:GetRole",
                    "iam:PassRole"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "iam"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::ImportValue": "Database:ExportsOutputRefwordpressdatabasepasswordD7AA46099426C91E"
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "secrets"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:DescribeAlarms",
                    "lambda:GetFunction",
                    "lambda:DeleteFunction",
                    "lambda:UpdateFunctionCode",
                    "lambda:UpdateFunctionConfiguration",
                    "lambda:ListVersionsByFunction",
                    "lambda:PublishVersion",
                    "lambda:UpdateAlias",
                    "lambda:GetAlias",
                    "lambda:GetProvisionedConcurrencyConfig"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambda"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetDeployment",
                    "codedeploy:GetDeploymentConfig",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "codedeploy"
          }
        ],
        "RoleName": "codeBuildUser2"
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/codeBuildUser2/Resource"
      }
    },
    "codeBuildUser2DefaultPolicy3E53EECA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:ec2:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
                          }
                        ]
                      ]
                    }
                  ],
                  "ec2:AuthorizedService": "codebuild.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ec2:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":network-interface/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "LambdaBuildCF1FE7ED"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "LambdaBuildCF1FE7ED"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "LambdaBuildCF1FE7ED"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Pipeline2ArtifactsBucketBBAC8B82",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Pipeline2ArtifactsBucketBBAC8B82",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "codeBuildUser2DefaultPolicy3E53EECA",
        "Roles": [
          {
            "Ref": "codeBuildUser2840AB886"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/codeBuildUser2/DefaultPolicy/Resource"
      }
    },
    "LambdaBuildCF1FE7ED": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "GITHUB_TOKEN",
              "Type": "PLAINTEXT",
              "Value": "fcf79cc446807d5a05113ff1057b933bda755f6e"
            }
          ],
          "Image": "aws/codebuild/standard:4.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "codeBuildUser2840AB886",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": {
            "Fn::Join": [
              "",
              [
                "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"php\": 7.4\n      },\n      \"commands\": [\n        \"npm i\",\n        \"ls -la\",\n        \"cd laravel && composer install && npm i && npm run build && cd ../\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npm run build\",\n        \"aws s3 sync laravel/public/assets s3://",
                {
                  "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressS3523C628C295C27F7"
                },
                " --exclude *.php\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"laravel\",\n    \"files\": [\n      \"**/*\"\n    ]\n  }\n}"
              ]
            ]
          },
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
            "Arn"
          ]
        },
        "FileSystemLocations": [
          {
            "Identifier": "codebuild_efs",
            "Location": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::ImportValue": "Storage2:ExportsOutputRefWordpressEFSDBDB4AAEFE31A04A"
                  },
                  ".efs.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".amazonaws.com:/export/lambda"
                ]
              ]
            },
            "MountOptions": "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport",
            "MountPoint": "/mnt/efs",
            "Type": "EFS"
          }
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::ImportValue": "Database:ExportsOutputFnGetAttrdssecuritygroupFB88BAE5GroupId90A39632"
            },
            {
              "Fn::ImportValue": "IamCommon:ExportsOutputFnGetAttefssecuritygroup5B03FC4EGroupId967354AA"
            },
            {
              "Fn::ImportValue": "VPC:ExportsOutputFnGetAttegresssecuritygroup21695EBDGroupId15DA57EC"
            }
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet1Subnet6940697DA44C7CEE"
            },
            {
              "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPCprivateSubnetSubnet2Subnet4D44975F0C746531"
            }
          ],
          "VpcId": {
            "Fn::ImportValue": "VPC:ExportsOutputRefCustomVPC616E3387378F0964"
          }
        }
      },
      "DependsOn": [
        "LambdaBuildPolicyDocumentE6F63FBC"
      ],
      "Metadata": {
        "aws:cdk:path": "Pipeline2/LambdaBuild/Resource"
      }
    },
    "LambdaBuildPolicyDocumentE6F63FBC": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaBuildPolicyDocumentE6F63FBC",
        "Roles": [
          {
            "Ref": "codeBuildUser2840AB886"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/LambdaBuild/PolicyDocument/Resource"
      }
    },
    "Pipeline2ArtifactsBucketEncryptionKey9C275DF2": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "codePipelineUser266D1493D",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "codeBuildUser2840AB886",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "codeBuildUser2840AB886",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "Pipeline2ArtifactsBucketEncryptionKeyAlias4C3D138C": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-pipeline20bd89e9d",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "Pipeline2ArtifactsBucketBBAC8B82": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/ArtifactsBucket/Resource"
      }
    },
    "Pipeline27E937D7F": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "codePipelineUser266D1493D",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "timsilog",
                  "Repo": "testCICD",
                  "Branch": "master",
                  "OAuthToken": "fcf79cc446807d5a05113ff1057b933bda755f6e",
                  "PollForSourceChanges": false
                },
                "Name": "Checkout",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_Checkout"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "LambdaBuildCF1FE7ED"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_Checkout"
                  }
                ],
                "Name": "Lambda_Build",
                "OutputArtifacts": [
                  {
                    "Name": "LambdaBuildOutput"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "Pipeline2ArtifactsBucketEncryptionKey9C275DF2",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "Pipeline2ArtifactsBucketBBAC8B82"
          },
          "Type": "S3"
        },
        "RestartExecutionOnUpdate": true
      },
      "DependsOn": [
        "codePipelineUser2DefaultPolicy5E342A2A",
        "codePipelineUser266D1493D"
      ],
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/Resource"
      }
    },
    "Pipeline2SourceCheckoutWebhookResource80D1DE04": {
      "Type": "AWS::CodePipeline::Webhook",
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "fcf79cc446807d5a05113ff1057b933bda755f6e"
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}"
          }
        ],
        "TargetAction": "Checkout",
        "TargetPipeline": {
          "Ref": "Pipeline27E937D7F"
        },
        "TargetPipelineVersion": 1,
        "RegisterWithThirdParty": true
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/Source/Checkout/WebhookResource"
      }
    },
    "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole/Resource"
      }
    },
    "Pipeline2BuildLambdaBuildCodePipelineActionRoleDefaultPolicy122F6B93": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaBuildCF1FE7ED",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Pipeline2BuildLambdaBuildCodePipelineActionRoleDefaultPolicy122F6B93",
        "Roles": [
          {
            "Ref": "Pipeline2BuildLambdaBuildCodePipelineActionRole0729DFBD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/Pipeline2/Build/Lambda_Build/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.65.0,@aws-cdk/assets=1.65.0,@aws-cdk/aws-apigateway=1.65.0,@aws-cdk/aws-applicationautoscaling=1.65.0,@aws-cdk/aws-autoscaling=1.65.0,@aws-cdk/aws-autoscaling-common=1.65.0,@aws-cdk/aws-autoscaling-hooktargets=1.65.0,@aws-cdk/aws-certificatemanager=1.65.0,@aws-cdk/aws-cloudformation=1.65.0,@aws-cdk/aws-cloudfront=1.65.0,@aws-cdk/aws-cloudwatch=1.65.0,@aws-cdk/aws-codebuild=1.65.0,@aws-cdk/aws-codedeploy=1.65.0,@aws-cdk/aws-codeguruprofiler=1.65.0,@aws-cdk/aws-codepipeline=1.65.0,@aws-cdk/aws-codepipeline-actions=1.65.0,@aws-cdk/aws-ec2=1.65.0,@aws-cdk/aws-ecr=1.65.0,@aws-cdk/aws-ecr-assets=1.65.0,@aws-cdk/aws-ecs=1.65.0,@aws-cdk/aws-efs=1.65.0,@aws-cdk/aws-elasticloadbalancingv2=1.65.0,@aws-cdk/aws-events=1.65.0,@aws-cdk/aws-events-targets=1.65.0,@aws-cdk/aws-iam=1.65.0,@aws-cdk/aws-kms=1.65.0,@aws-cdk/aws-lambda=1.65.0,@aws-cdk/aws-logs=1.65.0,@aws-cdk/aws-rds=1.65.0,@aws-cdk/aws-s3=1.65.0,@aws-cdk/aws-s3-assets=1.65.0,@aws-cdk/aws-sam=1.65.0,@aws-cdk/aws-secretsmanager=1.65.0,@aws-cdk/aws-servicediscovery=1.65.0,@aws-cdk/aws-sns=1.65.0,@aws-cdk/aws-sns-subscriptions=1.65.0,@aws-cdk/aws-sqs=1.65.0,@aws-cdk/aws-ssm=1.65.0,@aws-cdk/cloud-assembly-schema=1.65.0,@aws-cdk/core=1.65.0,@aws-cdk/custom-resources=1.65.0,@aws-cdk/cx-api=1.65.0,@aws-cdk/region-info=1.65.0,jsii-runtime=node.js/v14.8.0"
      },
      "Metadata": {
        "aws:cdk:path": "Pipeline2/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}